language: cpp

matrix:
  include:
  - compiler: clang
    env: COMPILER=clang++ SKIP_CHECK=true SKIP_COVERAGE=true
    addons:
      apt:
        packages:
        - libudns-dev
  - compiler: clang
    env: COMPILER=clang++ SKIP_COVERAGE=true
    addons:
      apt:
        packages:
        - libcppunit-dev
        - libudns-dev
  - compiler: clang
    env: COMPILER=clang++ SKIP_COVERAGE=true
    addons:
      apt:
        packages:
        - libcppunit-dev
  - compiler: clang
    env: COMPILER=clang++-3.6 SKIP_COVERAGE=true
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.6
        packages:
        - clang-3.6
        - libcppunit-dev
        - libudns-dev
  - compiler: clang
    env: COMPILER=clang++-3.7 SKIP_COVERAGE=true
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.7
        packages:
        - clang-3.7
        - libcppunit-dev
        - libudns-dev
  - compiler: clang
    env: COMPILER=clang++-3.8 SKIP_COVERAGE=true
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.8
        packages:
        - clang-3.8
        - libcppunit-dev
        - libudns-dev
  - compiler: gcc
    env: COMPILER=g++-4.7 SKIP_CHECK=true SKIP_COVERAGE=true
    addons:
      apt:
        sources: ubuntu-toolchain-r-test
        packages:
        - g++-4.7
        - libudns-dev
  - compiler: gcc
    env: COMPILER=g++-4.7 SKIP_COVERAGE=true
    addons:
      apt:
        sources: ubuntu-toolchain-r-test
        packages:
        - g++-4.7
        - libcppunit-dev
        - libudns-dev
  - compiler: gcc
    env: COMPILER=g++-4.7 SKIP_COVERAGE=true
    addons:
      apt:
        sources: ubuntu-toolchain-r-test
        packages:
        - g++-4.7
        - libcppunit-dev
  - compiler: gcc
    env: COMPILER=g++-4.8
    addons:
      apt:
        sources: ubuntu-toolchain-r-test
        packages:
        - g++-4.8
        - libcppunit-dev
        - libudns-dev

before_install:
  - if [ ! $SKIP_COVERAGE ]; then pip install --user cpp-coveralls; fi

script:
- if [ ! $SKIP_COVERAGE ]; then export CXXFLAGS="-ftest-coverage -fprofile-arcs"; fi
- ./autogen.sh && CXX="$COMPILER" ./configure && make -j12
- if [ ! $SKIP_CHECK ]; then make -j12 check; fi

after_success:
  - if [ ! $SKIP_COVERAGE ]; then coveralls --exclude test --gcov-options '\-lp' --gcov gcov-4.8; fi
